
shellcode5:     file format elf32-i386


Disassembly of section .init:

08048274 <_init>:
 8048274:	53                   	push   %ebx
 8048275:	83 ec 08             	sub    $0x8,%esp
 8048278:	e8 77 00 00 00       	call   80482f4 <__x86.get_pc_thunk.bx>
 804827d:	81 c3 cb 13 00 00    	add    $0x13cb,%ebx
 8048283:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048289:	85 c0                	test   %eax,%eax
 804828b:	74 05                	je     8048292 <_init+0x1e>
 804828d:	e8 1e 00 00 00       	call   80482b0 <__gmon_start__@plt>
 8048292:	83 c4 08             	add    $0x8,%esp
 8048295:	5b                   	pop    %ebx
 8048296:	c3                   	ret    

Disassembly of section .plt:

080482a0 <.plt>:
 80482a0:	ff 35 4c 96 04 08    	pushl  0x804964c
 80482a6:	ff 25 50 96 04 08    	jmp    *0x8049650
 80482ac:	00 00                	add    %al,(%eax)
	...

080482b0 <__gmon_start__@plt>:
 80482b0:	ff 25 54 96 04 08    	jmp    *0x8049654
 80482b6:	68 00 00 00 00       	push   $0x0
 80482bb:	e9 e0 ff ff ff       	jmp    80482a0 <.plt>

080482c0 <__libc_start_main@plt>:
 80482c0:	ff 25 58 96 04 08    	jmp    *0x8049658
 80482c6:	68 08 00 00 00       	push   $0x8
 80482cb:	e9 d0 ff ff ff       	jmp    80482a0 <.plt>

Disassembly of section .text:

080482d0 <_start>:
 80482d0:	31 ed                	xor    %ebp,%ebp
 80482d2:	5e                   	pop    %esi
 80482d3:	89 e1                	mov    %esp,%ecx
 80482d5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482d8:	50                   	push   %eax
 80482d9:	54                   	push   %esp
 80482da:	52                   	push   %edx
 80482db:	68 50 84 04 08       	push   $0x8048450
 80482e0:	68 e0 83 04 08       	push   $0x80483e0
 80482e5:	51                   	push   %ecx
 80482e6:	56                   	push   %esi
 80482e7:	68 bc 83 04 08       	push   $0x80483bc
 80482ec:	e8 cf ff ff ff       	call   80482c0 <__libc_start_main@plt>
 80482f1:	f4                   	hlt    
 80482f2:	66 90                	xchg   %ax,%ax

080482f4 <__x86.get_pc_thunk.bx>:
 80482f4:	8b 1c 24             	mov    (%esp),%ebx
 80482f7:	c3                   	ret    
 80482f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%eax,%eax,1)
 80482ff:	00 

08048300 <deregister_tm_clones>:
 8048300:	b8 a7 96 04 08       	mov    $0x80496a7,%eax
 8048305:	2d a4 96 04 08       	sub    $0x80496a4,%eax
 804830a:	83 f8 06             	cmp    $0x6,%eax
 804830d:	77 02                	ja     8048311 <deregister_tm_clones+0x11>
 804830f:	f3 c3                	repz ret 
 8048311:	b8 00 00 00 00       	mov    $0x0,%eax
 8048316:	85 c0                	test   %eax,%eax
 8048318:	74 f5                	je     804830f <deregister_tm_clones+0xf>
 804831a:	55                   	push   %ebp
 804831b:	89 e5                	mov    %esp,%ebp
 804831d:	83 ec 18             	sub    $0x18,%esp
 8048320:	c7 04 24 a4 96 04 08 	movl   $0x80496a4,(%esp)
 8048327:	ff d0                	call   *%eax
 8048329:	c9                   	leave  
 804832a:	c3                   	ret    
 804832b:	90                   	nop
 804832c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048330 <register_tm_clones>:
 8048330:	b8 a4 96 04 08       	mov    $0x80496a4,%eax
 8048335:	2d a4 96 04 08       	sub    $0x80496a4,%eax
 804833a:	c1 f8 02             	sar    $0x2,%eax
 804833d:	89 c2                	mov    %eax,%edx
 804833f:	c1 ea 1f             	shr    $0x1f,%edx
 8048342:	01 d0                	add    %edx,%eax
 8048344:	d1 f8                	sar    %eax
 8048346:	75 02                	jne    804834a <register_tm_clones+0x1a>
 8048348:	f3 c3                	repz ret 
 804834a:	ba 00 00 00 00       	mov    $0x0,%edx
 804834f:	85 d2                	test   %edx,%edx
 8048351:	74 f5                	je     8048348 <register_tm_clones+0x18>
 8048353:	55                   	push   %ebp
 8048354:	89 e5                	mov    %esp,%ebp
 8048356:	83 ec 18             	sub    $0x18,%esp
 8048359:	89 44 24 04          	mov    %eax,0x4(%esp)
 804835d:	c7 04 24 a4 96 04 08 	movl   $0x80496a4,(%esp)
 8048364:	ff d2                	call   *%edx
 8048366:	c9                   	leave  
 8048367:	c3                   	ret    
 8048368:	90                   	nop
 8048369:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08048370 <__do_global_dtors_aux>:
 8048370:	80 3d a4 96 04 08 00 	cmpb   $0x0,0x80496a4
 8048377:	75 13                	jne    804838c <__do_global_dtors_aux+0x1c>
 8048379:	55                   	push   %ebp
 804837a:	89 e5                	mov    %esp,%ebp
 804837c:	83 ec 08             	sub    $0x8,%esp
 804837f:	e8 7c ff ff ff       	call   8048300 <deregister_tm_clones>
 8048384:	c6 05 a4 96 04 08 01 	movb   $0x1,0x80496a4
 804838b:	c9                   	leave  
 804838c:	f3 c3                	repz ret 
 804838e:	66 90                	xchg   %ax,%ax

08048390 <frame_dummy>:
 8048390:	a1 58 95 04 08       	mov    0x8049558,%eax
 8048395:	85 c0                	test   %eax,%eax
 8048397:	74 1e                	je     80483b7 <frame_dummy+0x27>
 8048399:	b8 00 00 00 00       	mov    $0x0,%eax
 804839e:	85 c0                	test   %eax,%eax
 80483a0:	74 15                	je     80483b7 <frame_dummy+0x27>
 80483a2:	55                   	push   %ebp
 80483a3:	89 e5                	mov    %esp,%ebp
 80483a5:	83 ec 18             	sub    $0x18,%esp
 80483a8:	c7 04 24 58 95 04 08 	movl   $0x8049558,(%esp)
 80483af:	ff d0                	call   *%eax
 80483b1:	c9                   	leave  
 80483b2:	e9 79 ff ff ff       	jmp    8048330 <register_tm_clones>
 80483b7:	e9 74 ff ff ff       	jmp    8048330 <register_tm_clones>

080483bc <main>:
 80483bc:	55                   	push   %ebp
 80483bd:	89 e5                	mov    %esp,%ebp
 80483bf:	83 ec 10             	sub    $0x10,%esp
 80483c2:	8d 45 fc             	lea    -0x4(%ebp),%eax
 80483c5:	83 c0 08             	add    $0x8,%eax
 80483c8:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80483cb:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80483ce:	ba 80 96 04 08       	mov    $0x8049680,%edx
 80483d3:	89 10                	mov    %edx,(%eax)
 80483d5:	c9                   	leave  
 80483d6:	c3                   	ret    
 80483d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%eax,%eax,1)
 80483de:	00 00 

080483e0 <__libc_csu_init>:
 80483e0:	55                   	push   %ebp
 80483e1:	57                   	push   %edi
 80483e2:	31 ff                	xor    %edi,%edi
 80483e4:	56                   	push   %esi
 80483e5:	53                   	push   %ebx
 80483e6:	e8 09 ff ff ff       	call   80482f4 <__x86.get_pc_thunk.bx>
 80483eb:	81 c3 5d 12 00 00    	add    $0x125d,%ebx
 80483f1:	83 ec 1c             	sub    $0x1c,%esp
 80483f4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80483f8:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80483fe:	e8 71 fe ff ff       	call   8048274 <_init>
 8048403:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048409:	29 c6                	sub    %eax,%esi
 804840b:	c1 fe 02             	sar    $0x2,%esi
 804840e:	85 f6                	test   %esi,%esi
 8048410:	74 27                	je     8048439 <__libc_csu_init+0x59>
 8048412:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048418:	8b 44 24 38          	mov    0x38(%esp),%eax
 804841c:	89 2c 24             	mov    %ebp,(%esp)
 804841f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048423:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048427:	89 44 24 04          	mov    %eax,0x4(%esp)
 804842b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048432:	83 c7 01             	add    $0x1,%edi
 8048435:	39 f7                	cmp    %esi,%edi
 8048437:	75 df                	jne    8048418 <__libc_csu_init+0x38>
 8048439:	83 c4 1c             	add    $0x1c,%esp
 804843c:	5b                   	pop    %ebx
 804843d:	5e                   	pop    %esi
 804843e:	5f                   	pop    %edi
 804843f:	5d                   	pop    %ebp
 8048440:	c3                   	ret    
 8048441:	eb 0d                	jmp    8048450 <__libc_csu_fini>
 8048443:	90                   	nop
 8048444:	90                   	nop
 8048445:	90                   	nop
 8048446:	90                   	nop
 8048447:	90                   	nop
 8048448:	90                   	nop
 8048449:	90                   	nop
 804844a:	90                   	nop
 804844b:	90                   	nop
 804844c:	90                   	nop
 804844d:	90                   	nop
 804844e:	90                   	nop
 804844f:	90                   	nop

08048450 <__libc_csu_fini>:
 8048450:	f3 c3                	repz ret 
 8048452:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

08048454 <_fini>:
 8048454:	53                   	push   %ebx
 8048455:	83 ec 08             	sub    $0x8,%esp
 8048458:	e8 97 fe ff ff       	call   80482f4 <__x86.get_pc_thunk.bx>
 804845d:	81 c3 eb 11 00 00    	add    $0x11eb,%ebx
 8048463:	83 c4 08             	add    $0x8,%esp
 8048466:	5b                   	pop    %ebx
 8048467:	c3                   	ret    
